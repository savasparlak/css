@import url("https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css");
@import url('https://fonts.googleapis.com/css2?family=Lato:wght@500;700&display=swap'); 
/* Yukarıda yer alan google fontlarının import linkini direk google fonts sitesinden de alabiliriz. */
@import url("styling-buttons.css");
@import url("base.css");  

/* Yukarıda import edilen linkler daha önce index.html'in head etiketleri arasında yer alıyordu. 
Alternatif bir yol olarak buraya import ettik. Burada yapılan iş yine aynıdır. */

   
    
    html {
        scroll-behavior: smooth;
        }

    #baslik{
        color:#3e4555;
        background: 
    linear-gradient(to bottom, rgba(252, 153, 124, 0.2),rgba(250, 81, 30, 0.2)),
    url('../img/bg.jpeg');
        background-size: cover;
        /* background-attachment: fixed; */
        background-position: center;
        height: 30vh;
        width: 100%;       
        position: relative;
        }

        #baslik .content{
            position: absolute;     
            top:60%;
            left:50% ;
            transform:translate(-50%,-50%) ;    
            color: rgb(255, 255, 255,0.5);
            background: rgba(46, 76, 109, 0.3);
            font-size: 1.8rem;
            padding: 2rem;
            width: 60%;
            border-radius: 1rem;
        }
       /* NOT: Yukarıdaki h1 etiketi id'si #baslik olan çerçeve etiketinin içinde bir etiket olduğundan position özelliği çerçeve etiketine
       relative, h1 etiketine absolute özelliği verilir. H1 etiketini çerçeve etiketinin tam ortasına almak için yukarıdan ve soldan 50% değer
       veririz. Ancak h1 etiketini yine tam ortaya alamayız. H1 etiketinin içeriğinin tam ortasını dıştaki çerçevenin ortasına tam ortalamak 
       için ise transform:translate(-50%,-50%) özelliğini h1 etiketine tanımlamamız lazım. */
          
        
        @media (min-width:576px) {
            #baslik {
                height: 40vh;
                
        }         
        }

        @media (min-width:768px) {
            #baslik {
                height: 50vh;
        }        
        }
        @media (min-width:992px) {
            #baslik {
                height: 60vh;
                    }
                   
        }
        @media (min-width:1200px) {
            #baslik {
                height: 70vh;
                    }
                   
        }
        @media (min-width:1400px) {
            #baslik {
            height: 80vh;
            background-attachment: fixed;
                    }
                  
        }


main{
    min-height: calc(100vh - 175px);
   /* margin-top: 5.5rem; */
}
.main-header__logo{
    color:#fff;
    text-decoration: none;
    font-weight: bold;
    font-size: 2.1rem;
}

.main-nav__item:last-child{
    display: none;
}

@media (max-width: 600px) {  
    .main-nav__items .main-nav__item {
        display: none;
    }   
    .main-nav__item:last-child {
        display: block;
        font-size: 2.6rem;
    }
    
    .responsive .main-nav {
        display: block;
    }
    .responsive .main-nav__item {
        display: block;
        text-align: left;
        margin: 1rem 0;
    }

    .responsive .main-nav__item:last-child {
        position: absolute;
        right: 40px;
        top: 6px;
    }

    
    
}

.main-nav__item a{
text-decoration: none;
font-weight: bold;
color: #fff;
}

.main-header{
    background-color: #ccb6a1;
    padding: 0.8rem 1.6rem;
    position: fixed;
    z-index: 1;
    width: 100%;
    top: 0px;
}

.main-nav{
    display: inline-block;
    width: calc(100% - 12rem); 
    text-align: right;
    margin: 0px 0.8rem;
}

.main-nav__items{
    margin: 0px;
    padding: 0px;
    list-style-type: none;
}
.main-nav__item{
    display: inline-block;   
    margin: 0px 0.8rem;
}


#item1 a::before{
    content: '\1F3E0  ';
    color: black;
}

#item2 a::before{
content: '\1F3AC  ';
color: black;
}

#item3 a::before{   
    content: '\260E  ';
    color: black;
}
#item4 a::before{   
    content: '\1F513   ';
    color: black;
}

.main-nav__item a:hover{
background-color: rgb(216, 220, 236);  
color: black;  
}

.main-nav__item a:visited{
color: green;    
}

.main-nav__item a:active{
background-color: rgb(185, 92, 92);
color: black;    
}

#altbaslik{
color:black;
background-color  :#cdb7a2;
text-transform:capitalize; 
padding: 1rem;
text-align: center;
}


        

        .icon-box h3 {
            color: #3e4555;
            font-size: 2.6rem;
        }
        .icon-box i {
            color: #9e4e35;
            font-size: 2.6rem;
        }

        .features{
            margin:0px;             
        }

        .features .col-2{
            height: 350px;
        }    

        .features-left{
            background: 
            linear-gradient(to bottom, rgba(252, 153, 124, 0.2),rgba(250, 81, 30, 0.2)),
            url('../img/uygulama__features.jpeg');
            background-size: cover;
            background-position: top center;
        }
        /* .features-left sınıfında  background-size: cover diye bir özellik tanımladık çünkü arka planda olan resmi tanımlandığı
        bloğun içine (çerçeveye yani) sığdırmasını istedik. background-position: top center özelliği ile de resmi yukarıdan ortaladık.
        */
        .features-right{
            background-color:aliceblue;
            padding: 4rem;
            vertical-align: top;
        }

        .features-right h3{
            font-size: 3rem;
        }
        
        /* Yukarıda .features-right a sınıfında tarayıcıda buton görünümlü olan a etiketine yazı ile arasında boşluk verebilmek için
        a etiketini önce   display: inline-block yapmamız gerekir ki daha sonra margin-top:15px ile bir boşluk verebilelim. */

          
        .section-title{
            text-align: center;
            margin-bottom: 4rem;
            color: #3e4555;
            font-size: 3rem;
            font-weight: 600;
            }
            
        .plan{           
            text-align: center;
            padding: 0.5rem;
        }

        .plan__badge{
            background: #fff;
            color: #fc997c;
            padding: 0.8rem;
            border-radius: 0.5rem;
        }
        .recommended_plan{
            color: #fff;
            background: #396eb0!important;
        }

      

        @media (min-width:768px){
            .plan--features{
                position: relative;
                top: -2rem;
            }
        }

        .inner-plan{
            background: #edf5f7;
            padding: 2.5rem 1rem;
            border-radius: 0.5rem;
            box-shadow: 0.5rem 1rem 1.5rem 0.5rem #888888;
            box-shadow: 0rem 0.7rem 2.9rem 0px rgba(100, 100, 111, 0.2);
            transition: box-shadow .2s;
        }

        .inner-plan:hover{
            box-shadow: 0rem 0.7rem 2.9rem 0rem rgba(100, 100, 111, 0.5);
        }
/* NOT: Yukardaki box-shadow özelliği ile nesnelere gölgelendirme efekti verebiliyoruz. Ayrıca transition özelliği sayesinde de 
gölgelendirme efektine süre vererek geçiş efekti ekleyebiliriz. */
       
     
        
        #backtotop{
            position: fixed;
            right: 1rem;
            bottom: 1rem;
            font-size: 4.5rem;
        }

        #backtotop i{
            color: #fc997c;
            transition: color .6s;
        }

        #backtotop i:hover{
            color: #fb6537;
        }
           

/* NOT: Yukarıda nav etiketi için bir genişlik ayarlaması yapılmıştır. MovieApp başlığı ile nav etiketi başlıklarının aynı satırda 
    yer alabilmesi için "width: calc(100% - 78px);" satırı yazılmıştır. nav menüsünü  tarayıcıda sağa yaslamamız için nav menüsü
hem MoviApp yazısı ile aynı satırda olmalı hem de sağa yaslanmalıdır. Bunun için inline-block olan nav menüsünün tam genişliğine
width:100% yapıp daha sonra calc fonksiyonu içinde MovieApp yazısının genişliği kadar bu satırdan çıkarılırsa aynı satırda gözükür
ve ayrıca tarayıcımızın boyutları değişse bile nav menü elemanları herzaman sağa yaslı bir şekilde gözükür.  */


.counter{
    background: linear-gradient(to bottom, #fc997c 0%, #fc8b69 100%);
    text-align: center;
    padding: 5rem;
}

.counter__item {
    font-size: 3rem;
    font-weight: 500;
    color: #fff;
}


.counter h4 {
    margin: 0;
    color: #fff;
}

.card{    
    background-color: #fff;
    border-radius: 0.5rem;
    cursor: pointer;
    box-shadow: 1rem 1rem 4rem rgba(52,58,64,0.1); 
    /* position: relative;
    top: 0px;   */
    transition: all .3s;
    /* Yukarıda position:relative diyerek nesneyi olduğu yerden yani top:0px noktasından transition: all .3s gibi bir
    zaman diliminde nesnelerin üzerine hover olduğumuzda top:-10px konumuna getirmiş oluyoruz. */
}
   
.card:hover{
    /* top: -10px; */
    transform: translateY(-1rem);
/* Cardların yukarı transition özelliğine alternatif bir özellik olarak 
transform: translateY(-10px) yöntemini kullanabiliriz. Y hizasında -10px bulunduğu yerden yukarı kaydırır bu işlem.
 Tabi bunun için "position: relative; top: 0px;" özelliklerini pasif etmemiz lazım. 
 Sadece "transition: all .3s" özelliği aktif olmalı. */
}

.card-image{
max-height: 35rem;
}

.card-body{
    padding: 3rem;
}

footer{
    background-color: #ccb6a1;
    padding: 2rem;
    margin-top: 2rem;
    /* position: relative;
    bottom: -34.5rem; */
       
}


footer ul{
    margin:0px;
    padding: 0px;
}

footer li {
    list-style-type: none;
    display: inline-block;
    margin-left: 0.5rem;
}

footer ul a{
   color: #fff; 
   font-size: 1.8rem;
   text-decoration:none;
}

.social-links {
    text-align: right;
}

.fab {
    padding: 1rem;
    font-size: 2.5rem;
    border-radius: 50%;
}

.fab:hover {
    opacity: 0.7;
 }

.fa-facebook {
    background-color: #3B5998;  
}

.fa-twitter {
    background-color: #55ACEE;    
}

.fa-instagram {
    background-color: #125688;    
}